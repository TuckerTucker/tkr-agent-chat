"""Initial A2A protocol models

Revision ID: a35d839a00db
Revises: 
Create Date: 2025-04-21 13:59:19.549422

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a35d839a00db'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_cards',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('icon_path', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chat_sessions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('session_type', sa.String(), nullable=True),
    sa.Column('session_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('a2a_tasks',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELLED', name='taskstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='taskpriority'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agent_capabilities',
    sa.Column('agent_id', sa.String(), nullable=False),
    sa.Column('capability', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_cards.id'], ),
    sa.PrimaryKeyConstraint('agent_id', 'capability')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_uuid', sa.String(), nullable=True),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('USER', 'AGENT', 'SYSTEM', 'ERROR', 'TASK', name='messagetype'), nullable=False),
    sa.Column('role', sa.Enum('INITIATOR', 'RESPONDER', 'OBSERVER', 'COORDINATOR', name='messagerole'), nullable=True),
    sa.Column('agent_id', sa.String(), nullable=True),
    sa.Column('parts', sa.JSON(), nullable=False),
    sa.Column('message_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('in_reply_to', sa.String(), nullable=True),
    sa.Column('context_refs', sa.JSON(), nullable=True),
    sa.Column('capabilities_used', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_cards.id'], ),
    sa.ForeignKeyConstraint(['in_reply_to'], ['messages.message_uuid'], ),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_messages_agent_id'), ['agent_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_message_uuid'), ['message_uuid'], unique=True)
        batch_op.create_index(batch_op.f('ix_messages_session_id'), ['session_id'], unique=False)

    op.create_table('task_agents',
    sa.Column('task_id', sa.String(), nullable=False),
    sa.Column('agent_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_cards.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['a2a_tasks.id'], ),
    sa.PrimaryKeyConstraint('task_id', 'agent_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_agents')
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_messages_session_id'))
        batch_op.drop_index(batch_op.f('ix_messages_message_uuid'))
        batch_op.drop_index(batch_op.f('ix_messages_id'))
        batch_op.drop_index(batch_op.f('ix_messages_agent_id'))

    op.drop_table('messages')
    op.drop_table('agent_capabilities')
    op.drop_table('a2a_tasks')
    op.drop_table('chat_sessions')
    op.drop_table('agent_cards')
    # ### end Alembic commands ###
